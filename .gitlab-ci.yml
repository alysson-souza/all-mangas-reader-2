image: node:14-buster

stages:
    - build
    - package

before_script:
    - export PREVIOUS_TAGS=$(git tag --list --format '%(objectname)' --merged origin/master --no-contains HEAD)
    - export PREVIOUS_TAGS+=" $(git tag --list --format '%(objectname)' --points-at HEAD)"
    - export LAST_TAG=$([[ -n "$PREVIOUS_TAGS" ]] && git merge-base --independent $PREVIOUS_TAGS)
    - export VERSION=$([[ -n "$LAST_TAG" ]] && git tag --points-at $LAST_TAG)
    - export VERSION=${VERSION:-2.0.0}
    - export PATCH=$(git rev-list ${LAST_TAG:+$LAST_TAG..}HEAD | wc -l)
    - export LAST_COMMIT_SUBJECT=$(git log -1 --pretty=%s)
    - export LAST_COMMIT_BODY=$(git log -1 --pretty=%b)
    - yarn

.build_common: &build_common
    stage: build
    artifacts:
        paths:
            - dist/
        expire_in: 1 day

build:
    <<: *build_common
    script: yarn run build

.zip_common: &zip_common
    stage: package
    script: yarn run build-zip
    artifacts:
        paths:
            - dist-zip/*.zip
        expire_in: 1 week

zip:
    <<: *zip_common
    dependencies:
        - build

xpi-beta:
    stage: package
    script:
        - yarn run manifest:specify -firefox -checkver $VERSION -patch $PATCH
        - npx web-ext sign --channel=unlisted --source-dir=dist --api-key="$SIGN_FF_API_KEY_2" --api-secret="$SIGN_FF_API_SECRET_2" --artifacts-dir=dist-zip --timeout=1800000
    artifacts:
        paths:
            - dist-zip/*.xpi
        expire_in: 1 week
    except:
        variables:
            - $SIGN_FF_API_KEY == null
            - $CI_COMMIT_MESSAGE =~ /NO-CI/
            - $CI_COMMIT_MESSAGE !~ /WITH-FF/
    only:
        - develop
    dependencies:
        - build

xpi-unsigned:
    stage: package
    script:
        - yarn run manifest:specify -firefox -checkver $VERSION
        - yarn run build-zip
        # do not sign file, has to be manually updated to Mozilla Addons, just prepare it for signing
    artifacts:
        paths:
            - dist-zip/*.zip
        expire_in: 1 week
    only:
        - tags
    dependencies:
        - build

crx-beta:
    stage: package
    script:
        - yarn run manifest:specify -chrome -checkver $VERSION -patch $PATCH
        - yarn run build-zip
    artifacts:
        paths:
            - dist-zip/*.zip
        expire_in: 1 week
    except:
        variables:
            - $CI_COMMIT_MESSAGE =~ /NO-CI/
    only:
        - develop
    dependencies:
        - build

crx:
    stage: package
    script:
        - yarn run manifest:specify -chrome -checkver $VERSION
        - yarn run build-zip
    artifacts:
        paths:
            - dist-zip/*.zip
        expire_in: 1 week
    only:
        - tags
    dependencies:
        - build

beta_notify:
    stage: .post
    script:
        - yarn run discord:beta --version "$VERSION" --patch "$PATCH" --id "$DISCORD_NOTIFY_BETA_ID" --token "$DISCORD_NOTIFY_BETA_TOKEN" --subject "$LAST_COMMIT_SUBJECT" --body "$LAST_COMMIT_BODY"
    except:
        variables:
            - $DISCORD_NOTIFY_BETA_ID == null
            - $CI_COMMIT_MESSAGE =~ /NO-CI/
    only:
        - develop
    dependencies:
        - xpi-beta
